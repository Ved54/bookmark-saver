version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: bookmark-saver-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: bookmark_saver
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - bookmark-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bookmark-saver-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5001
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: bookmark_saver
      DB_USER: admin
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      JWT_EXPIRE: 7d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5001:5001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - bookmark-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bookmark-saver-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bookmark-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 20s

volumes:
  mysql_data:
    driver: local

networks:
  bookmark-network:
    driver: bridge
